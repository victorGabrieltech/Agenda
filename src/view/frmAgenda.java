package view;

import java.sql.Connection;
import dao.CRUD;
import static dao.Conexao.getConnection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Contatos;
import javax.swing.JTable;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author 999829
 */
public class frmAgenda extends javax.swing.JFrame {

    DefaultTableModel tabela;
    String[] nomeColunas;
    ArrayList<Contatos> lista;

    /**
     * Creates new form frmAgenda
     */
    public frmAgenda() {
        initComponents();

        nomeColunas = new String[]{"ID", "Nome", "Endereço", "Telefone", "Sexo", "e-mail"};
        tabela = new DefaultTableModel(null, nomeColunas);
        jTableCadastro.setModel(tabela);

        jTableCadastro.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        jTableCadastro.getColumnModel().getColumn(0).setPreferredWidth(110);
        jTableCadastro.getColumnModel().getColumn(1).setPreferredWidth(110);
        jTableCadastro.getColumnModel().getColumn(2).setPreferredWidth(110);
        jTableCadastro.getColumnModel().getColumn(3).setPreferredWidth(110);
        jTableCadastro.getColumnModel().getColumn(4).setPreferredWidth(110);
        jTableCadastro.getColumnModel().getColumn(5).setPreferredWidth(115);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnEditarcontato = new javax.swing.JButton();
        btnApagarContato = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFone = new javax.swing.JTextField();
        txtSexo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCadastro = new javax.swing.JTable();
        txtPesquisa = new javax.swing.JTextField();
        exibirContatos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cadastro.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnEditarcontato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditarcontato.setText("Editar Contato");
        btnEditarcontato.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEditarcontato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarcontatoActionPerformed(evt);
            }
        });

        btnApagarContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apagar.png"))); // NOI18N
        btnApagarContato.setText("Apagar Contato");
        btnApagarContato.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnApagarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarContatoActionPerformed(evt);
            }
        });

        btnLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnLimparCampos.setText("Limpar");
        btnLimparCampos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(btnEditarcontato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(btnApagarContato, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnApagarContato, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(btnEditarcontato, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(288, 288, 288)
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(414, Short.MAX_VALUE)))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Pessoais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel1.setText("ID");

        jLabel3.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel3.setText("Nome");

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel2.setText("Endereço");

        jLabel4.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel4.setText("Telefone");

        txtSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino", "Outros" }));

        jLabel5.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel5.setText("Sexo");

        jLabel6.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        jLabel6.setText("Email");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFone)
                            .addComponent(txtEmail)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(54, 54, 54)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(txtNome))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtEndereco)))))
                .addGap(114, 114, 114))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jTableCadastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Endereço", "Telefone", "E-mail", "Sexo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableCadastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCadastroMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCadastro);

        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });

        exibirContatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lupa.png"))); // NOI18N
        exibirContatos.setText("Pesquisar");
        exibirContatos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exibirContatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exibirContatosActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 102, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(exibirContatos, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPesquisa)
                    .addComponent(exibirContatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(956, 775));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // Cadastrar novo Contato

        if (verificarDados() == true) {
            try {
                cadastrarContato();
                limpar();
            } catch (SQLException ex) {
                Logger.getLogger(frmAgenda.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void exibirContatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exibirContatosActionPerformed
        // 
        try {
            listarContatos();
        } catch (SQLException e) {
        }


    }//GEN-LAST:event_exibirContatosActionPerformed

    private void btnEditarcontatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarcontatoActionPerformed
        // editar contato 
        
        CRUD editar = new CRUD();
if (verificarDados()) {
   int selectedRow = jTableCadastro.getSelectedRow(); // Obtém o índice da linha selecionada
   if (selectedRow != -1) { // Verifica se uma linha foi selecionada
       int id = (int) jTableCadastro.getValueAt(selectedRow, 0); // ID está na primeira coluna
       String novoNome = JOptionPane.showInputDialog(null, "Digite o novo nome:"); // Solicita o novo nome
       String novoEndereco = JOptionPane.showInputDialog(null, "Digite o novo endereco:"); // Solicita o novo endereço
        String novoTelefone = JOptionPane.showInputDialog(null, "Digite o novo Telefone:"); // Solicita o novo telefone
       String novoEmail = JOptionPane.showInputDialog(null, "Digite o novo email:"); // Solicita o novo email
      
       // Confirmação antes de editar
       int confirmacao = JOptionPane.showConfirmDialog(null,
           "Tem certeza que deseja editar o contato?\nID: " + id + "\nNovo Nome: " + novoNome + "\nNovo Endereço: " + novoEndereco + "\nNovo Telefone: " + novoTelefone
               + "\nNovo Email: " + novoEmail,
           "Confirmação",
           JOptionPane.YES_NO_OPTION);
       if (confirmacao == JOptionPane.YES_OPTION) {
           editar.editarContato(id, novoNome, novoEndereco, novoTelefone, novoEmail); // Chama o método para editar o contato
           // Aqui você pode adicionar código para atualizar a tabela, se necessário
           try {
               listarContatos();
           } catch (SQLException ex) {
               Logger.getLogger(frmAgenda.class.getName()).log(Level.SEVERE, null, ex);
           }
       } else {
           JOptionPane.showMessageDialog(null, "Edição cancelada.");
       }
   } else {
       JOptionPane.showMessageDialog(null, "Por favor, selecione um contato para editar.");
   }
}
        
        
        
    }//GEN-LAST:event_btnEditarcontatoActionPerformed

    private void btnApagarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarContatoActionPerformed

        CRUD apagar = new CRUD();

        if (verificarDados()) {
            int selectedRow = jTableCadastro.getSelectedRow(); // Obtém o índice da linha selecionada
            if (selectedRow != -1) { // Verifica se uma linha foi selecionada
                int id = (int) jTableCadastro.getValueAt(selectedRow, 0); // ID está na primeira coluna
                apagar.deletarContato(id); // Chama o método para deletar o contato
                // Aqui você pode adicionar código para atualizar a tabela, se necessário
                Connection conex = getConnection();
                
                try {
                    listarContatos();
                } catch (SQLException ex) {
                    Logger.getLogger(frmAgenda.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, selecione um contato para deletar.");
            }
        }


    }//GEN-LAST:event_btnApagarContatoActionPerformed

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaActionPerformed

    private void jTableCadastroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCadastroMouseClicked

       
        int linha = jTableCadastro.getSelectedRow();

try {
    // Verifica se uma linha foi selecionada
    if (linha == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecione uma linha na tabela.");
        return;
    }

    // Monta a consulta SQL
    String sql = "SELECT * FROM tb_contatos WHERE id = " + jTableCadastro.getValueAt(linha, 0);

    // Estabelecer a conexão com o banco de dados
    Connection conex = getConnection();
    Statement ps = conex.createStatement();
    ResultSet rs = ps.executeQuery(sql);
    
    // Verifica se o resultado não está vazio
    if (rs.next()) {
        this.txtId.setText(rs.getString("id"));
        this.txtNome.setText(rs.getString("nome"));
        this.txtEndereco.setText(rs.getString("endereco"));
        this.txtFone.setText(rs.getString("telefone"));
        
        // Define o item selecionado na JComboBox de sexo
        String sexo = rs.getString("sexo");
        this.txtSexo.setSelectedItem(sexo);
        String resp;

        // Se precisar de lógica adicional para o sexo, você pode usar um switch
        switch (sexo) {
            case "M":
                resp = "Masculino";
                break;
            case "F":
                resp = "Femenino";
                break;
               
            default:
                resp = "Outros";
                // Lógica para outros casos ou não especificado
                break;
        }

        this.txtEmail.setText(rs.getString("email"));
    } else {
        JOptionPane.showMessageDialog(this, "Nenhum registro encontrado.");
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Erro ao acessar o banco de dados: " + e.getMessage());
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
} 
    }//GEN-LAST:event_jTableCadastroMouseClicked

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed

        // Método para limpar os campos
txtId.setText(""); // Limpar o campo Id
    txtNome.setText(""); // Limpa o campo de nome
    txtEndereco.setText(""); // Limpa o campo de endereço
    txtFone.setText(""); // Limpa o campo de telefone
    txtEmail.setText(""); // Limpa o campo de email

 
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagarContato;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditarcontato;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton exibirContatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableCadastro;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtFone;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JComboBox<String> txtSexo;
    // End of variables declaration//GEN-END:variables

    private boolean verificarDados() {
        if (!txtNome.getText().isEmpty()
                && !txtEndereco.getText().isEmpty()
                && !txtFone.getText().isEmpty()
                && !txtEmail.getText().isEmpty()) {
            return true;

        } else {
            String msg = "Campos: Nome,endereco,Telefone e e-mail deve ser preenchido";
            JOptionPane.showMessageDialog(null, msg,
                    "Erro ao Salvar", JOptionPane.ERROR_MESSAGE);
            return false;
        }

    }

    private void limpar() {
        txtNome.setText("");
        txtEndereco.setText("");
        txtFone.setText("");
        txtEmail.setText("");
        txtNome.requestFocus();
    }

    private void cadastrarContato() throws SQLException {

        Contatos pessoa = new Contatos();

        pessoa.setsNome(txtNome.getText());
        pessoa.setsEndereco(txtEndereco.getText());
        pessoa.setsTelefone(txtFone.getText());
        pessoa.setsEmail(txtEmail.getText());
        String sSexo = (String) txtSexo.getSelectedItem();
        pessoa.setcSexo(sSexo.charAt(0));

        CRUD gravarContato = new CRUD();
        gravarContato.inserirContatos(pessoa);

        JOptionPane.showMessageDialog(null, "Gravado com Sucesso");

    }

    private void listarContatos() throws SQLException {
        CRUD dao = new CRUD();
        lista = dao.pesquisarContatos("%" + txtPesquisa.getText() + "%");
        exibirContatos(lista);
    }

    private void exibirContatos(ArrayList<Contatos> lista) {
        while (tabela.getRowCount() > 0) {
            tabela.removeRow(0);
        }
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhm contato existente");
        } else {
            String[] linha = new String[]{null, null, null, null, null};

            //percorrer a lista de contatos e preencher a tablemodel
            for (int i = 0; i < lista.size(); i++) {
                tabela.addRow(linha);
                tabela.setValueAt(lista.get(i).getID(), i, 0);
                tabela.setValueAt(lista.get(i).getsNome(), i, 1);
                tabela.setValueAt(lista.get(i).getsEndereco(), i, 2);
                tabela.setValueAt(lista.get(i).getsTelefone(), i, 3);
                tabela.setValueAt(lista.get(i).getcSexo(), i, 4);
                tabela.setValueAt(lista.get(i).getsEmail(), i, 5);
            }
        }
    }

}
